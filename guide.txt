gradle-8.2
java: 17

****Main flow:
    DesktopLauncher ->DesktopGame

    DesktopGame extend UncivGame : call method

        setAsRootScreen(GameStartScreen())  :GameStartScreen load in some seconds and Then call setAsRootScreen(MainMenuScreen()) with condition:

            deepLinkedMultiplayerGame == null -> setAsRootScreen(MainMenuScreen()) : load MainMenuScreen (That user choose buttons to start or config game)


***UncivGame
    * On create() method:
        - Load json config data game:

            Concurrency.run("LoadJSON") {
                RulesetCache.loadRulesets()                         : load Rulesets
                translations.tryReadTranslationForCurrentLanguage() : load translate of current language from property file, ex: English.properties
                translations.loadPercentageCompleteOfLanguages()    : load PercentageCompleteOfLanguages
                TileSetCache.loadTileSetConfigs()                   : load TileSetConfigs
                SkinCache.loadSkinConfigs()                         : load Skins
                ....

***Flow to get text from translated current language(Ex:one flow):
    MainMenuScreen->getMenuButton()
        ...
       table.add(text.toLabel(fontSize = 30, alignment = Align.left)).expand().left().minWidth(200f)
       ...

        ->call method String.toLabel() in file Scene2dExtensions.kt

        Real logic get tranlated text from method  String.tr(hideIcons: Boolean = false): String

        String.tr() call String.translateIndividualWord(language: String, hideIcons: Boolean) to get translated Text


        The tranlated text contain [] to store an variable name will be replace with real input value.


***How font draw extractly characters to display on UI:
    When create a control like Label below:

    return Label(this.tr(hideIcons), labelStyle).apply {...

   NativeBitmapFontData extend BitmapFont class and override method

   public Glyph getGlyph (char ch) :
     - will use to put binary data of charaters to Pixmap:
        + Call method createAndCacheGlyph(ch: Char) ->getPixmapFromChar(ch: Char)->fontImplementation.getCharPixmap(ch)
            the fontImplementation depend on native environment: Android or Deskop will do logic and return Pixmap object.

     - Use PixmapPacker to pack Pixmap object, do logic to return a BitmapFont.Glyph













